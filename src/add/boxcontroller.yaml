esphome:
  name: boxcontroller

esp32:
  board: esp32dev
  framework:
    type: arduino
mqtt:
  broker: 192.168.2.22
  username: noise83
  password: neuro83
# Enable logging
logger:
  level: VERBOSE
# Enable Home Assistant API
api:

ota:
  password: "67b8ec5b1f9988f8372b32aa80d7cd98"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  power_save_mode: none
  fast_connect: True
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Boxcontroller Fallback Hotspot"
    password: "Tjhk3hKuxpu5"

captive_portal:

uart:
  id: mod_uart
  tx_pin: 25
  rx_pin: 26
  baud_rate: 9600
  stop_bits: 1



modbus:
  id: modbus1
  uart_id: mod_uart
  send_wait_time: 200ms


modbus_controller:
  - id: adam
    ## the Modbus device addr
    address: 0x1
    modbus_id: modbus1
    update_interval: 60s
    command_throttle: 100ms
    setup_priority: -10



sensor:
  - platform: modbus_controller
    modbus_controller_id: adam
    name: "Temperature1"
    unit_of_measurement: "°C"
    device_class: "temperature"
    state_class: "measurement"
    id: Temp1
    address: 0
    register_type: "holding"
    force_new_range: true
    value_type: U_WORD
    accuracy_decimals: 2
    lambda: |-
      if ((x>1000)&&(x<65535))return (x-10000)/10;
      else if (x<10000) return x/10;
      else return x;


  - platform: modbus_controller
    modbus_controller_id: adam
    name: "Temperature2"
    id: Temp2
    unit_of_measurement: "°C"
    device_class: "temperature"
    state_class: "measurement"
    address: 1
    register_type: "holding"
    value_type: U_WORD
    accuracy_decimals: 2
    lambda: |-
      if ((x > 1000)&&(x < 65535)) return (x-10000)/10;
      else if (x<10000) return x/10;
      else return x;


  - platform: modbus_controller
    modbus_controller_id: adam
    name: "Temperature3"
    id: Temp3
    unit_of_measurement: "°C"
    device_class: "temperature"
    state_class: "measurement"
    address: 2
    register_type: "holding"
    value_type: U_WORD
    accuracy_decimals: 2
    lambda: |-
      if ((x>1000)&&(x<65535)) return (x-10000)/10;
      else if (x<10000) return x/10;
      else return x;


  - platform: modbus_controller
    modbus_controller_id: adam
    name: "Temperature4"
    id: Temp4
    unit_of_measurement: "°C"
    device_class: "temperature"
    state_class: "measurement"
    address: 3
    register_type: "holding"
    value_type: U_WORD
    accuracy_decimals: 2
    lambda: |-
      if ((x>1000)&&(x<65535)) return (x-10000)/10;
      else if (x<10000) return x/10;
      else return x;


  - platform: modbus_controller
    modbus_controller_id: adam
    name: "Temperature5"
    id: Temp5
    address: 4
    register_type: "holding"
    value_type: U_WORD
    unit_of_measurement: "°C"
    device_class: "temperature"
    state_class: "measurement"
    accuracy_decimals: 2
    lambda: |-
      if ((x>1000)&&(x<65535)) return (x-10000)/10;
      else if (x<10000) return x/10;
      else return x;
  - platform: modbus_controller
    modbus_controller_id: adam
    name: "Temperature6"
    id: Temp6
    unit_of_measurement: "°C"
    device_class: "temperature"
    state_class: "measurement"
    address: 5
    register_type: "holding"
    value_type: U_WORD
    accuracy_decimals: 2
    lambda: |-
      if ((x>1000)&&(x<65535)) return (x-10000)/10;
      else if (x<10000) return x/10;
      else return x;

  - platform: modbus_controller
    modbus_controller_id: adam
    name: "Temperature7"
    id: Temp7
    unit_of_measurement: "°C"
    device_class: "temperature"
    state_class: "measurement"
    address: 6
    register_type: "holding"
    value_type: U_WORD
    accuracy_decimals: 2
    lambda: |-
      if ((x>1000)&&(x<65535)) return (x-10000)/10;
      else if (x<10000) return x/10;
      else return x;


  - platform: modbus_controller
    modbus_controller_id: adam
    name: "Temperature8"
    id: Temp8
    unit_of_measurement: "°C"
    device_class: "temperature"
    state_class: "measurement"
    address: 7
    register_type: "holding"
    value_type: U_WORD
    accuracy_decimals: 2
    lambda: |-
      if ((x>1000)&&(x<65535)) return (x-10000)/10;
      else if (x<10000) return x/10;
      else return x;

# modbus_controller:
#   - id: relay8
#     ## the Modbus device addr
#     address: 0x2
#     modbus_id: modbus1
#     setup_priority: -10

# switch:
# - platform: modbus_controller
#   modbus_controller_id: relay8
#   id: relay8_1
#   name: "Relay1"
#   register_type: holding
#   address: 0x21
# - platform: modbus_controller
#   modbus_controller_id: relay8
#   id: relay8_2
#   name: "Relay2"
#   register_type: holding
#   address: 0x22
# - platform: modbus_controller
#   modbus_controller_id: relay8
#   id: relay8_3
#   name: "Relay3"
#   register_type: holding
#   address: 0x23
# - platform: modbus_controller
#   modbus_controller_id: relay8
#   id: relay8_4
#   name: "Relay4"
#   register_type: holding
#   address: 0x24
# - platform: modbus_controller
#   modbus_controller_id: relay8
#   id: relay8_4
#   name: "Relay5"
#   register_type: holding
#   address: 0x25
# - platform: modbus_controller
#   modbus_controller_id: relay8
#   id: relay8_6
#   name: "Relay6"
#   register_type: holding
#   address: 0x26
# - platform: modbus_controller
#   modbus_controller_id: relay8
#   id: relay8_7
#   name: "Relay7"
#   register_type: holding
#   address: 7
# - platform: modbus_controller
#   modbus_controller_id: relay8
#   id: relay8_8
#   name: "Relay8"
#   register_type: holding
#   address: 8
